{"ast":null,"code":"var _jsxFileName = \"C:\\\\forum-academy-mern\\\\client\\\\src\\\\components\\\\StatsSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '..//StatsSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsSection = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const sectionRef = useRef(null);\n  const statsData = [{\n    value: 95,\n    suffix: '%',\n    label: 'Job Placement Rate',\n    icon: 'fa-solid fa-briefcase'\n  }, {\n    value: 50,\n    suffix: '+',\n    label: 'Industry Partners',\n    icon: 'fa-solid fa-handshake'\n  }, {\n    value: 15,\n    suffix: '+',\n    label: 'Specialized Programs',\n    icon: 'fa-solid fa-graduation-cap'\n  }, {\n    value: 2000,\n    suffix: '+',\n    label: 'Graduates',\n    icon: 'fa-solid fa-user-graduate'\n  }];\n\n  // Counter animation\n  const [counters, setCounters] = useState(statsData.map(() => 0));\n\n  // Intersection Observer to trigger counter animation when section is visible\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setIsVisible(true);\n      }\n    }, {\n      threshold: 0.3\n    });\n    if (sectionRef.current) {\n      observer.observe(sectionRef.current);\n    }\n    return () => {\n      if (sectionRef.current) {\n        observer.unobserve(sectionRef.current);\n      }\n    };\n  }, []);\n\n  // Animate counters when section becomes visible\n  useEffect(() => {\n    if (!isVisible) return;\n    statsData.forEach((stat, index) => {\n      const duration = 2000; // 2 seconds for animation\n      const interval = 20; // update every 20ms\n      const steps = duration / interval;\n      const increment = stat.value / steps;\n      let count = 0;\n      let currentCount = 0;\n      const timer = setInterval(() => {\n        count++;\n        currentCount += increment;\n        if (count >= steps) {\n          clearInterval(timer);\n          setCounters(prev => {\n            const newCounters = [...prev];\n            newCounters[index] = stat.value;\n            return newCounters;\n          });\n        } else {\n          setCounters(prev => {\n            const newCounters = [...prev];\n            newCounters[index] = Math.round(currentCount);\n            return newCounters;\n          });\n        }\n      }, interval);\n      return () => clearInterval(timer);\n    });\n  }, [isVisible, statsData]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stats-section\",\n    ref: sectionRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Our Impact in Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Driving education excellence through measurable outcomes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: statsData.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": index * 100,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: stat.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"counter\",\n              children: counters[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suffix\",\n              children: stat.suffix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: stat.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(StatsSection, \"W0Xe+8CG7G7utWTfEeCBJ2+xzGk=\");\n_c = StatsSection;\nexport default StatsSection;\nvar _c;\n$RefreshReg$(_c, \"StatsSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","StatsSection","_s","isVisible","setIsVisible","sectionRef","statsData","value","suffix","label","icon","counters","setCounters","map","observer","IntersectionObserver","entries","isIntersecting","threshold","current","observe","unobserve","forEach","stat","index","duration","interval","steps","increment","count","currentCount","timer","setInterval","clearInterval","prev","newCounters","Math","round","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/forum-academy-mern/client/src/components/StatsSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '..//StatsSection.css';\n\nconst StatsSection = () => {\n    const [isVisible, setIsVisible] = useState(false);\n    const sectionRef = useRef(null);\n    \n    const statsData = [\n        {\n            value: 95,\n            suffix: '%',\n            label: 'Job Placement Rate',\n            icon: 'fa-solid fa-briefcase'\n        },\n        {\n            value: 50,\n            suffix: '+',\n            label: 'Industry Partners',\n            icon: 'fa-solid fa-handshake'\n        },\n        {\n            value: 15,\n            suffix: '+',\n            label: 'Specialized Programs',\n            icon: 'fa-solid fa-graduation-cap'\n        },\n        {\n            value: 2000,\n            suffix: '+',\n            label: 'Graduates',\n            icon: 'fa-solid fa-user-graduate'\n        }\n    ];\n\n    // Counter animation\n    const [counters, setCounters] = useState(statsData.map(() => 0));\n\n    // Intersection Observer to trigger counter animation when section is visible\n    useEffect(() => {\n        const observer = new IntersectionObserver((entries) => {\n            if (entries[0].isIntersecting) {\n                setIsVisible(true);\n            }\n        }, { threshold: 0.3 });\n        \n        if (sectionRef.current) {\n            observer.observe(sectionRef.current);\n        }\n        \n        return () => {\n            if (sectionRef.current) {\n                observer.unobserve(sectionRef.current);\n            }\n        };\n    }, []);\n\n    // Animate counters when section becomes visible\n    useEffect(() => {\n        if (!isVisible) return;\n        \n        statsData.forEach((stat, index) => {\n            const duration = 2000; // 2 seconds for animation\n            const interval = 20; // update every 20ms\n            const steps = duration / interval;\n            const increment = stat.value / steps;\n            let count = 0;\n            let currentCount = 0;\n            \n            const timer = setInterval(() => {\n                count++;\n                currentCount += increment;\n                \n                if (count >= steps) {\n                    clearInterval(timer);\n                    setCounters(prev => {\n                        const newCounters = [...prev];\n                        newCounters[index] = stat.value;\n                        return newCounters;\n                    });\n                } else {\n                    setCounters(prev => {\n                        const newCounters = [...prev];\n                        newCounters[index] = Math.round(currentCount);\n                        return newCounters;\n                    });\n                }\n            }, interval);\n            \n            return () => clearInterval(timer);\n        });\n    }, [isVisible, statsData]);\n\n    return (\n        <section className=\"stats-section\" ref={sectionRef}>\n            <div className=\"stats-overlay\"></div>\n            <div className=\"container\">\n                <div className=\"stats-header\">\n                    <h2>Our Impact in Numbers</h2>\n                    <p>Driving education excellence through measurable outcomes</p>\n                </div>\n                <div className=\"stats-grid\">\n                    {statsData.map((stat, index) => (\n                        <div className=\"stat-item\" key={index} data-aos=\"zoom-in\" data-aos-delay={index * 100}>\n                            <div className=\"stat-icon\">\n                                <i className={stat.icon}></i>\n                            </div>\n                            <div className=\"stat-value\">\n                                <span className=\"counter\">{counters[index]}</span>\n                                <span className=\"suffix\">{stat.suffix}</span>\n                            </div>\n                            <p className=\"stat-label\">{stat.label}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default StatsSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}