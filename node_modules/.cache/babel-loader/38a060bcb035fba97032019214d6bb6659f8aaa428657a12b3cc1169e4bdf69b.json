{"ast":null,"code":"var _jsxFileName = \"C:\\\\forum-academy-mern\\\\client\\\\src\\\\components\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/LoginModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [isStudent, setIsStudent] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Add debug logs\n  console.log(\"LoginModal rendered, isOpen:\", isOpen);\n\n  // Handle animation timing for modal appearance\n  useEffect(() => {\n    console.log(\"isOpen changed to:\", isOpen);\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n      // Use requestAnimationFrame for smoother animation\n      requestAnimationFrame(() => {\n        setIsVisible(true);\n      });\n    } else {\n      setIsVisible(false);\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen]);\n\n  // Rest of your component remains the same\n\n  // Important: Don't hide the component with return null\n  // Instead, let CSS handle the visibility\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`,\n    onClick: onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginModal, \"IGOeTigfza8uwWcGczfI2A17EE8=\");\n_c = LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoginModal","isOpen","onClose","_s","isStudent","setIsStudent","email","setEmail","password","setPassword","rememberMe","setRememberMe","isVisible","setIsVisible","console","log","document","body","style","overflow","requestAnimationFrame","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/forum-academy-mern/client/src/components/LoginModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/LoginModal.css';\n\nconst LoginModal = ({ isOpen, onClose }) => {\n    const [isStudent, setIsStudent] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [isVisible, setIsVisible] = useState(false);\n    \n    // Add debug logs\n    console.log(\"LoginModal rendered, isOpen:\", isOpen);\n    \n    // Handle animation timing for modal appearance\n    useEffect(() => {\n        console.log(\"isOpen changed to:\", isOpen);\n        if (isOpen) {\n            document.body.style.overflow = 'hidden';\n            // Use requestAnimationFrame for smoother animation\n            requestAnimationFrame(() => {\n                setIsVisible(true);\n            });\n        } else {\n            setIsVisible(false);\n            document.body.style.overflow = 'auto';\n        }\n        \n        return () => {\n            document.body.style.overflow = 'auto';\n        };\n    }, [isOpen]);\n    \n    // Rest of your component remains the same\n    \n    // Important: Don't hide the component with return null\n    // Instead, let CSS handle the visibility\n    \n    return (\n        <div className={`login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`} onClick={onClose}>\n            {/* Rest of your JSX remains the same */}\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAkB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEd,MAAM,CAAC;;EAEnD;EACAJ,SAAS,CAAC,MAAM;IACZiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEd,MAAM,CAAC;IACzC,IAAIA,MAAM,EAAE;MACRe,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;MACvC;MACAC,qBAAqB,CAAC,MAAM;QACxBP,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACHA,YAAY,CAAC,KAAK,CAAC;MACnBG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAM;IACzC;IAEA,OAAO,MAAM;MACTH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAM;IACzC,CAAC;EACL,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;;EAEZ;;EAEA;EACA;;EAEA,oBACIF,OAAA;IAAKsB,SAAS,EAAE,uBAAuBpB,MAAM,GAAG,QAAQ,GAAG,EAAE,IAAIW,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAACU,OAAO,EAAEpB;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3G,CAAC;AAEd,CAAC;AAACvB,EAAA,CAvCIH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}