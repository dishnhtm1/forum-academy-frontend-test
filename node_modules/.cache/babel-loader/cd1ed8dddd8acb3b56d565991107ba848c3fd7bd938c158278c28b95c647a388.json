{"ast":null,"code":"var _jsxFileName = \"C:\\\\forum-academy-mern\\\\client\\\\src\\\\components\\\\LoginModal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import '../styles/LoginModal.css';\n\n// const LoginModal = ({ isOpen, onClose }) => {\n//     const [isStudent, setIsStudent] = useState(true);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [rememberMe, setRememberMe] = useState(false);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [formError, setFormError] = useState('');\n\n//     // Handle animation timing for modal appearance\n//     useEffect(() => {\n//         if (isOpen) {\n//             document.body.style.overflow = 'hidden';\n//             requestAnimationFrame(() => {\n//                 setIsVisible(true);\n//             });\n//         } else {\n//             setIsVisible(false);\n//             document.body.style.overflow = 'auto';\n//         }\n\n//         return () => {\n//             document.body.style.overflow = 'auto';\n//         };\n//     }, [isOpen]);\n\n//     // Close modal on escape key\n//     useEffect(() => {\n//         const handleEsc = (event) => {\n//             if (event.keyCode === 27) onClose();\n//         };\n//         window.addEventListener('keydown', handleEsc);\n\n//         return () => {\n//             window.removeEventListener('keydown', handleEsc);\n//         };\n//     }, [onClose]);\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         setFormError('');\n//         setIsLoading(true);\n\n//         // Simulate login request\n//         setTimeout(() => {\n//             if (email.includes('@') && password.length >= 6) {\n//                 // Success - would actually redirect in real app\n//                 onClose();\n//             } else {\n//                 setFormError('Invalid email or password. Please try again.');\n//             }\n//             setIsLoading(false);\n//         }, 1500);\n//     };\n\n//     return (\n//         <div className={`login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`} onClick={onClose}>\n//             <div className=\"login-modal\" onClick={e => e.stopPropagation()}>\n//                 <button className=\"modal-close-btn\" onClick={onClose} aria-label=\"Close login modal\">\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                         <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n//                     </svg>\n//                 </button>\n\n//                 <div className=\"login-modal-content\">\n//                     <div className=\"login-form-container\">\n//                         <div className=\"login-header\">\n//                             <div className=\"login-user-icon\">\n//                                 {isStudent ? (\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M12 3L1 9l4 2.18v6L12 21l7-3.82v-6l2-1.09V17h2V9L12 3zm6.82 6L12 12.72 5.18 9 12 5.28 18.82 9zM17 15.99l-5 2.73-5-2.73v-3.72L12 15l5-2.73v3.72z\"/>\n//                                     </svg>\n//                                 ) : (\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z\"/>\n//                                     </svg>\n//                                 )}\n//                             </div>\n//                             <h2>{isStudent ? 'Student Portal' : 'Faculty Portal'}</h2>\n//                             <p>Sign in with your credentials</p>\n//                         </div>\n\n//                         <div className=\"login-tabs\">\n//                             <button \n//                                 className={`login-tab ${isStudent ? 'active' : ''}`} \n//                                 onClick={() => setIsStudent(true)}\n//                             >\n//                                 Student\n//                             </button>\n//                             <button \n//                                 className={`login-tab ${!isStudent ? 'active' : ''}`} \n//                                 onClick={() => setIsStudent(false)}\n//                             >\n//                                 Faculty\n//                             </button>\n//                             <div className=\"tab-indicator\" style={{ left: isStudent ? '0' : '50%' }}></div>\n//                         </div>\n\n//                         {formError && (\n//                             <div className=\"form-error\">\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                     <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\n//                                 </svg>\n//                                 {formError}\n//                             </div>\n//                         )}\n\n//                         <form className=\"login-form\" onSubmit={handleLogin}>\n//                             <div className=\"form-floating\">\n//                                 <input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     placeholder=\" \"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     required\n//                                     className=\"form-input\"\n//                                 />\n//                                 <label htmlFor=\"email\" className=\"form-label\">Email Address</label>\n//                                 <div className=\"input-icon\">\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\n//                                     </svg>\n//                                 </div>\n//                             </div>\n\n//                             <div className=\"form-floating\">\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     placeholder=\" \"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                     className=\"form-input\"\n//                                 />\n//                                 <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//                                 <div className=\"input-icon\">\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\n//                                     </svg>\n//                                 </div>\n//                             </div>\n\n//                             <div className=\"form-options\">\n//                                 <div className=\"checkbox-wrapper\">\n//                                     <input\n//                                         type=\"checkbox\"\n//                                         id=\"remember\"\n//                                         checked={rememberMe}\n//                                         onChange={() => setRememberMe(!rememberMe)}\n//                                         className=\"custom-checkbox\"\n//                                     />\n//                                     <label htmlFor=\"remember\" className=\"checkbox-label\">\n//                                         <span className=\"checkbox-custom\"></span>\n//                                         Remember me\n//                                     </label>\n//                                 </div>\n//                                 <a href=\"#\" className=\"forgot-password\">Forgot password?</a>\n//                             </div>\n\n//                             <button \n//                                 type=\"submit\" \n//                                 className={`login-button ${isLoading ? 'loading' : ''}`}\n//                                 disabled={isLoading}\n//                             >\n//                                 {isLoading ? (\n//                                     <span className=\"button-loader\"></span>\n//                                 ) : (\n//                                     <>\n//                                         <span>Sign In</span>\n//                                         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                             <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"/>\n//                                         </svg>\n//                                     </>\n//                                 )}\n//                             </button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default LoginModal;\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/LoginModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [isStudent, setIsStudent] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formError, setFormError] = useState('');\n\n  // Handle animation timing for modal appearance\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n      requestAnimationFrame(() => {\n        setIsVisible(true);\n      });\n    } else {\n      setIsVisible(false);\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen]);\n\n  // Close modal on escape key\n  useEffect(() => {\n    const handleEsc = event => {\n      if (event.keyCode === 27) onClose();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, [onClose]);\n  const handleLogin = e => {\n    e.preventDefault();\n    setFormError('');\n    setIsLoading(true);\n\n    // Simulate login request\n    setTimeout(() => {\n      if (email.includes('@') && password.length >= 6) {\n        // Success - would actually redirect in real app\n        onClose();\n      } else {\n        setFormError('Invalid email or password. Please try again.');\n      }\n      setIsLoading(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: onClose,\n        \"aria-label\": \"Close login modal\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `login-tab ${isStudent ? 'active' : ''}`,\n          onClick: () => setIsStudent(true),\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `login-tab ${!isStudent ? 'active' : ''}`,\n          onClick: () => setIsStudent(false),\n          children: \"Faculty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-indicator\",\n          style: {\n            left: isStudent ? '0' : '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), formError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"E-mail\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"forgot-password\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `login-button ${isLoading ? 'loading' : ''}`,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this) : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-account-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"Or Sign in with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-accounts\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button google\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"svg\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              height: \"1em\",\n              viewBox: \"0 0 488 512\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button apple\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"svg\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              height: \"1em\",\n              viewBox: \"0 0 384 512\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button twitter\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"svg\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              height: \"1em\",\n              viewBox: \"0 0 512 512\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"agreement\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Learn user licence agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginModal, \"uz7fGUQzrRJVZLVg1GEMnx+sPLM=\");\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoginModal","isOpen","onClose","_s","isStudent","setIsStudent","email","setEmail","password","setPassword","rememberMe","setRememberMe","isVisible","setIsVisible","isLoading","setIsLoading","formError","setFormError","document","body","style","overflow","requestAnimationFrame","handleEsc","event","keyCode","window","addEventListener","removeEventListener","handleLogin","e","preventDefault","setTimeout","includes","length","className","onClick","children","stopPropagation","xmlns","viewBox","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","left","onSubmit","type","id","placeholder","value","onChange","target","required","href","disabled","height","_c","$RefreshReg$"],"sources":["C:/forum-academy-mern/client/src/components/LoginModal.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import '../styles/LoginModal.css';\n\n// const LoginModal = ({ isOpen, onClose }) => {\n//     const [isStudent, setIsStudent] = useState(true);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [rememberMe, setRememberMe] = useState(false);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [formError, setFormError] = useState('');\n    \n//     // Handle animation timing for modal appearance\n//     useEffect(() => {\n//         if (isOpen) {\n//             document.body.style.overflow = 'hidden';\n//             requestAnimationFrame(() => {\n//                 setIsVisible(true);\n//             });\n//         } else {\n//             setIsVisible(false);\n//             document.body.style.overflow = 'auto';\n//         }\n        \n//         return () => {\n//             document.body.style.overflow = 'auto';\n//         };\n//     }, [isOpen]);\n\n//     // Close modal on escape key\n//     useEffect(() => {\n//         const handleEsc = (event) => {\n//             if (event.keyCode === 27) onClose();\n//         };\n//         window.addEventListener('keydown', handleEsc);\n        \n//         return () => {\n//             window.removeEventListener('keydown', handleEsc);\n//         };\n//     }, [onClose]);\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         setFormError('');\n//         setIsLoading(true);\n        \n//         // Simulate login request\n//         setTimeout(() => {\n//             if (email.includes('@') && password.length >= 6) {\n//                 // Success - would actually redirect in real app\n//                 onClose();\n//             } else {\n//                 setFormError('Invalid email or password. Please try again.');\n//             }\n//             setIsLoading(false);\n//         }, 1500);\n//     };\n\n//     return (\n//         <div className={`login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`} onClick={onClose}>\n//             <div className=\"login-modal\" onClick={e => e.stopPropagation()}>\n//                 <button className=\"modal-close-btn\" onClick={onClose} aria-label=\"Close login modal\">\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                         <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n//                     </svg>\n//                 </button>\n                \n//                 <div className=\"login-modal-content\">\n//                     <div className=\"login-form-container\">\n//                         <div className=\"login-header\">\n//                             <div className=\"login-user-icon\">\n//                                 {isStudent ? (\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M12 3L1 9l4 2.18v6L12 21l7-3.82v-6l2-1.09V17h2V9L12 3zm6.82 6L12 12.72 5.18 9 12 5.28 18.82 9zM17 15.99l-5 2.73-5-2.73v-3.72L12 15l5-2.73v3.72z\"/>\n//                                     </svg>\n//                                 ) : (\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z\"/>\n//                                     </svg>\n//                                 )}\n//                             </div>\n//                             <h2>{isStudent ? 'Student Portal' : 'Faculty Portal'}</h2>\n//                             <p>Sign in with your credentials</p>\n//                         </div>\n                        \n//                         <div className=\"login-tabs\">\n//                             <button \n//                                 className={`login-tab ${isStudent ? 'active' : ''}`} \n//                                 onClick={() => setIsStudent(true)}\n//                             >\n//                                 Student\n//                             </button>\n//                             <button \n//                                 className={`login-tab ${!isStudent ? 'active' : ''}`} \n//                                 onClick={() => setIsStudent(false)}\n//                             >\n//                                 Faculty\n//                             </button>\n//                             <div className=\"tab-indicator\" style={{ left: isStudent ? '0' : '50%' }}></div>\n//                         </div>\n                        \n//                         {formError && (\n//                             <div className=\"form-error\">\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                     <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\n//                                 </svg>\n//                                 {formError}\n//                             </div>\n//                         )}\n                        \n//                         <form className=\"login-form\" onSubmit={handleLogin}>\n//                             <div className=\"form-floating\">\n//                                 <input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     placeholder=\" \"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     required\n//                                     className=\"form-input\"\n//                                 />\n//                                 <label htmlFor=\"email\" className=\"form-label\">Email Address</label>\n//                                 <div className=\"input-icon\">\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\n//                                     </svg>\n//                                 </div>\n//                             </div>\n                            \n//                             <div className=\"form-floating\">\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     placeholder=\" \"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                     className=\"form-input\"\n//                                 />\n//                                 <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//                                 <div className=\"input-icon\">\n//                                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                         <path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\n//                                     </svg>\n//                                 </div>\n//                             </div>\n                            \n//                             <div className=\"form-options\">\n//                                 <div className=\"checkbox-wrapper\">\n//                                     <input\n//                                         type=\"checkbox\"\n//                                         id=\"remember\"\n//                                         checked={rememberMe}\n//                                         onChange={() => setRememberMe(!rememberMe)}\n//                                         className=\"custom-checkbox\"\n//                                     />\n//                                     <label htmlFor=\"remember\" className=\"checkbox-label\">\n//                                         <span className=\"checkbox-custom\"></span>\n//                                         Remember me\n//                                     </label>\n//                                 </div>\n//                                 <a href=\"#\" className=\"forgot-password\">Forgot password?</a>\n//                             </div>\n                            \n//                             <button \n//                                 type=\"submit\" \n//                                 className={`login-button ${isLoading ? 'loading' : ''}`}\n//                                 disabled={isLoading}\n//                             >\n//                                 {isLoading ? (\n//                                     <span className=\"button-loader\"></span>\n//                                 ) : (\n//                                     <>\n//                                         <span>Sign In</span>\n//                                         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//                                             <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"/>\n//                                         </svg>\n//                                     </>\n//                                 )}\n//                             </button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default LoginModal;\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/LoginModal.css';\n\nconst LoginModal = ({ isOpen, onClose }) => {\n    const [isStudent, setIsStudent] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [isVisible, setIsVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [formError, setFormError] = useState('');\n    \n    // Handle animation timing for modal appearance\n    useEffect(() => {\n        if (isOpen) {\n            document.body.style.overflow = 'hidden';\n            requestAnimationFrame(() => {\n                setIsVisible(true);\n            });\n        } else {\n            setIsVisible(false);\n            document.body.style.overflow = 'auto';\n        }\n        \n        return () => {\n            document.body.style.overflow = 'auto';\n        };\n    }, [isOpen]);\n\n    // Close modal on escape key\n    useEffect(() => {\n        const handleEsc = (event) => {\n            if (event.keyCode === 27) onClose();\n        };\n        window.addEventListener('keydown', handleEsc);\n        \n        return () => {\n            window.removeEventListener('keydown', handleEsc);\n        };\n    }, [onClose]);\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        setFormError('');\n        setIsLoading(true);\n        \n        // Simulate login request\n        setTimeout(() => {\n            if (email.includes('@') && password.length >= 6) {\n                // Success - would actually redirect in real app\n                onClose();\n            } else {\n                setFormError('Invalid email or password. Please try again.');\n            }\n            setIsLoading(false);\n        }, 1500);\n    };\n\n    return (\n        <div className={`login-modal-overlay ${isOpen ? 'active' : ''} ${isVisible ? 'visible' : ''}`} onClick={onClose}>\n            <div className=\"container\" onClick={e => e.stopPropagation()}>\n                <button className=\"modal-close-btn\" onClick={onClose} aria-label=\"Close login modal\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                    </svg>\n                </button>\n                \n                <div className=\"heading\">Sign In</div>\n                \n                <div className=\"login-tabs\">\n                    <button \n                        className={`login-tab ${isStudent ? 'active' : ''}`} \n                        onClick={() => setIsStudent(true)}\n                    >\n                        Student\n                    </button>\n                    <button \n                        className={`login-tab ${!isStudent ? 'active' : ''}`} \n                        onClick={() => setIsStudent(false)}\n                    >\n                        Faculty\n                    </button>\n                    <div className=\"tab-indicator\" style={{ left: isStudent ? '0' : '50%' }}></div>\n                </div>\n                \n                {formError && (\n                    <div className=\"form-error\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\n                        </svg>\n                        {formError}\n                    </div>\n                )}\n                \n                <form className=\"form\" onSubmit={handleLogin}>\n                    <input\n                        className=\"input\"\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"E-mail\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                    \n                    <input\n                        className=\"input\"\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                    \n                    <span className=\"forgot-password\">\n                        <a href=\"#\">Forgot Password?</a>\n                    </span>\n                    \n                    <button \n                        type=\"submit\" \n                        className={`login-button ${isLoading ? 'loading' : ''}`}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? (\n                            <span className=\"button-loader\"></span>\n                        ) : \"Sign In\"}\n                    </button>\n                </form>\n                \n                <div className=\"social-account-container\">\n                    <span className=\"title\">Or Sign in with</span>\n                    <div className=\"social-accounts\">\n                        <button className=\"social-button google\">\n                            <svg className=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 488 512\">\n                                <path d=\"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"></path>\n                            </svg>\n                        </button>\n                        <button className=\"social-button apple\">\n                            <svg className=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 384 512\">\n                                <path d=\"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"></path>\n                            </svg>\n                        </button>\n                        <button className=\"social-button twitter\">\n                            <svg className=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">\n                                <path d=\"M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z\"></path>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n                <span className=\"agreement\">\n                    <a href=\"#\">Learn user licence agreement</a>\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginModal;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}